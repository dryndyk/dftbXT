#-----------------------------------------------------------------------
#  S P A R S K I T       C O M P L E X      E X T E N S I O N  
#-----------------------------------------------------------------------
#
# There are three types of source files in SPARSKIT:
# 1. library source files
#    SUBROUTINE EXTENDED:
#     
#    BLASSM/zblassm.f:      
#    BLASSM/zmatvec.f:      
#    FORMATS/zformats.f:      
#    FORMATS/zunary.f:     
#    FORMATS/sort.f: CREATED (Contains dcsort and csorted)
#    INFO/zinfofun.f:     
#    INFO/info13.f:     
#    INOUT/zinout.f:  TO BE COMPLETED !!     
#    ITSOL/zilut.f:      
#    (ITSOL/ziters.f:  NOT FULLY EXTENDED)   
#    (ITSOL/zitaux.f:  TEST ROUTINE NOT EXTENDED)    
#    ORDERINGS/zccn.f:
#    UNSUPP/BLAS1/blas1.f:  EXTENDED TO double complex   
#
# 2. non-library and unsupported source files
#    NOT EXTENDED YET
# 3. test programs
#    NOT EXTENDED YET
#
# Simply type "make" to make the SPARSKIT library.
#
# "make all" will additionally make all the unsupported objects.
#
# To make the test programs, use the makefiles in each subdirectory,
# or see the dotests script.
# There are no references to test programs in this makefile.
# Some test programs use the non-library objects from other directories,
# so do a "make all" before making test programs.
#
# Last Updated:  May 9, 1994.

.SUFFIXES:
.SUFFIXES: .f .o

include $(ROOT)/make.config

OBJDIR := $(BUILDROOT)/external/sparskit
SRCDIR := $(ROOT)/external/sparskit
STAMPFILE := $(OBJDIR)/BUILD_TIMESTAMP

FC = $(FXX)
F77 = $(FXX)
AR = ar -rcv 
OPT = -O2
#$(FXXOPT) $(FCOMP)
#-xSSE4.1,SSSE3 -ip 

#
# library objects
#
SOURCES=  \
    $(SRCDIR)/BLASSM/blassm.f      \
	$(SRCDIR)/BLASSM/zblassm.f	   \
	$(SRCDIR)/BLASSM/matvec.f	   \
	$(SRCDIR)/BLASSM/zmatvec.f	   \
	$(SRCDIR)/FORMATS/formats.f	   \
	$(SRCDIR)/FORMATS/zformats.f   \
	$(SRCDIR)/FORMATS/unary.f	   \
	$(SRCDIR)/FORMATS/zunary.f	   \
	$(SRCDIR)/FORMATS/sort.f       \
	$(SRCDIR)/INFO/infofun.f	   \
	$(SRCDIR)/INFO/zinfofun.f	   \
	$(SRCDIR)/INOUT/inout.f		   \
	$(SRCDIR)/INOUT/zinout.f	   \
	$(SRCDIR)/ORDERINGS/ccn.f	   \
	$(SRCDIR)/ORDERINGS/zccn.f	   \
	$(SRCDIR)/ORDERINGS/color.f	   \
	$(SRCDIR)/ORDERINGS/zcolor.f   \
	$(SRCDIR)/ORDERINGS/dsepart.f  \
	$(SRCDIR)/ORDERINGS/zdsepart.f \
	$(SRCDIR)/ITSOL/ilut.f		   \
	$(SRCDIR)/ITSOL/zilut.f		   \
	$(SRCDIR)/ITSOL/iters.f		

#	MATGEN/FDIF/genmat.o	\
#	MATGEN/FEM/elmtlib2.o	\
#	MATGEN/FEM/femgen.o	\
#	MATGEN/FEM/meshes.o	\
#	MATGEN/MISC/sobel.o	\
#	MATGEN/MISC/zlatev.o	\
# ITSOL/zilut.o		        \
# ITSOL/ziters.o		\


#
# non-library and unsupported objects
#
#OBJ2 =	ITSOL/itaux.o		\
#	MATGEN/FDIF/functns.o	\
#	MATGEN/FEM/functns2.o	\
#	UNSUPP/BLAS1/blas1.o	\
#	UNSUPP/MATEXP/exppro.o	\
#	UNSUPP/MATEXP/phipro.o	\
#	UNSUPP/PLOTS/psgrd.o	\
#	UNSUPP/PLOTS/texgrid1.o	\
#	UNSUPP/PLOTS/texplt1.o


#OBJ2 =  UNSUPP/BLAS1/blas1.o 
OBJ = $(SOURCES:.f=.o) 
	
DIRS =	.			\
	BLASSM			\
	FORMATS			\
	INFO			\
	INOUT			\
	ITSOL			\
	MATGEN/FDIF		\
	MATGEN/FEM		\
	MATGEN/MISC		\
	ORDERINGS		\
	UNSUPP/BLAS1	\
	UNSUPP/MATEXP	\
	UNSUPP/PLOTS

TARGET = libzsparskit.a

all: $(TARGET)

$(TARGET): $(OBJ)
	rm -f $(TARGET)
	$(AR) $(TARGET) $(OBJ)
    

# do not ranlib on some architectures

.PHONY: clean distclean

clean: 
	@for dir in $(DIRS) ;\
          do \
          echo cleaning $$dir ;\
          (cd $$dir; rm -f *~ *.o *.ex .,* fort.* ftn?? *.mat *.pic *.ps *.trace core *__genmod*) ;\
          done

distclean: clean
	rm -f $(TARGET)

tarit: 
	(cd ..; tar cvf - SPARSKIT2 | gzip -c > SPARSKIT2.tar.gz) 

all: $(OBJ) $(OBJ2) $(TARGET)

BLASSM/zblassm.o: BLASSM/zblassm.f
	$(F77)  $(OPT) -o $@  -c $<	
BLASSM/zmatvec.o: BLASSM/zmatvec.f
	$(F77)  $(OPT) -o $@  -c $<
BLASSM/blassm.o: BLASSM/blassm.f
	$(F77)  $(OPT) -o $@  -c $<
BLASSM/matvec.o: BLASSM/matvec.f
	$(F77)  $(OPT) -o $@  -c $<
FORMATS/zformats.o: FORMATS/zformats.f
	$(F77)  $(OPT) -o $@  -c $<
FORMATS/zunary.o: FORMATS/zunary.f
	$(F77)  $(OPT) -o $@  -c $<
FORMATS/formats.o: FORMATS/formats.f
	$(F77)  $(OPT) -o $@  -c $<
FORMATS/unary.o: FORMATS/unary.f
	$(F77)  $(OPT) -o $@  -c $<
FORMATS/sort.o: FORMATS/sort.f
	$(F77)  $(OPT) -o $@  -c $<
INFO/zinfofun.o: INFO/zinfofun.f
	$(F77)  $(OPT) -o $@  -c $<
INFO/infofun.o: INFO/infofun.f
	$(F77)  $(OPT) -o $@  -c $<
INOUT/zinout.o: INOUT/zinout.f
	$(F77)  $(OPT) -o $@  -c $<
INOUT/inout.o: INOUT/inout.f
	$(F77)  $(OPT) -o $@  -c $<
ITSOL/zilut.o: ITSOL/zilut.f
	$(F77)  $(OPT) -o $@  -c $<
#ITSOL/ziters.o: ITSOL/ziters.f
#	(cd ITSOL; $(F77)  $(OPT) ziters.f)
#ITSOL/zitaux.o: ITSOL/zitaux.f
#	(cd ITSOL; $(F77)  $(OPT) zitaux.f)
ITSOL/ilut.o: ITSOL/ilut.f
	$(F77)  $(OPT) -o $@  -c $<
ITSOL/iters.o: ITSOL/ziters.f
	$(F77)  $(OPT) -o $@  -c $<
ITSOL/itaux.o: ITSOL/zitaux.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/zccn.o: ORDERINGS/zccn.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/zcolor.o: ORDERINGS/zcolor.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/zdsepart.o: ORDERINGS/zdsepart.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/ccn.o: ORDERINGS/ccn.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/color.o: ORDERINGS/color.f
	$(F77)  $(OPT) -o $@  -c $<
ORDERINGS/dsepart.o: ORDERINGS/dsepart.f
	$(F77)  $(OPT) -o $@  -c $<

UNSUPP/BLAS1/blas1.o: UNSUPP/BLAS1/blas1.f
	$(F77)  $(OPT) -o $@  -c $<

#MATGEN/FDIF/genmat.o: MATGEN/FDIF/genmat.f
#	(cd MATGEN/FDIF ; $(F77)  $(OPT) genmat.f)
#MATGEN/FDIF/functns.o: MATGEN/FDIF/functns.f
#	(cd MATGEN/FDIF ; $(F77)  $(OPT) functns.f)
#MATGEN/FEM/elmtlib2.o: MATGEN/FEM/elmtlib2.f
#	(cd MATGEN/FEM ; $(F77)  $(OPT) elmtlib2.f)
#MATGEN/FEM/femgen.o: MATGEN/FEM/femgen.f
#	(cd MATGEN/FEM ; $(F77)  $(OPT) femgen.f)
#MATGEN/FEM/functns2.o : MATGEN/FEM/functns2.f 
#	(cd MATGEN/FEM ; $(F77)  $(OPT) functns2.f)
#MATGEN/FEM/meshes.o: MATGEN/FEM/meshes.f
#	(cd MATGEN/FEM ; $(F77)  $(OPT) meshes.f)
#MATGEN/MISC/sobel.o: MATGEN/MISC/sobel.f
#	(cd MATGEN/MISC ; $(F77)  $(OPT) sobel.f)
#MATGEN/MISC/zlatev.o: MATGEN/MISC/zlatev.f
#	(cd MATGEN/MISC ; $(F77)  $(OPT) zlatev.f)

#UNSUPP/MATEXP/exppro.o: UNSUPP/MATEXP/exppro.f
#	(cd UNSUPP/MATEXP ; $(F77)  $(OPT) exppro.f)
#UNSUPP/MATEXP/phipro.o: UNSUPP/MATEXP/phipro.f
#	(cd UNSUPP/MATEXP ; $(F77)  $(OPT) phipro.f)
#UNSUPP/PLOTS/psgrd.o : UNSUPP/PLOTS/psgrd.f 
#	(cd UNSUPP/PLOTS ; $(F77) $(OPT) psgrd.f)
#UNSUPP/PLOTS/texgrid1.o : UNSUPP/PLOTS/texgrid1.f 
#	(cd UNSUPP/PLOTS ; $(F77) $(OPT) texgrid1.f)
#UNSUPP/PLOTS/texplt1.o : UNSUPP/PLOTS/texplt1.f 
#	(cd UNSUPP/PLOTS ; $(F77) $(OPT) texplt1.f)
